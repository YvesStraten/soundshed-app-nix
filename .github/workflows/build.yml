# build and make
name: app build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
        - '*'
  pull_request:
    branches: [ main ]

jobs:
  build_windows:
    # if: false # disable build
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        # Repository name with owner. For example, actions/checkout
        repository: soundshed/soundshed-app
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: |
        copy app-private\env.ts .\src
        copy app-private\WebprofusionPty2020.p12 .\src
        
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
      env:
        WIN_CODE_SIGNING_P12: WebprofusionPty2020.p12
        
    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-win-x64
          path: out/make/squirrel.windows/x64/*
   
  build_linux_ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - run: |
        cp app-private\env.ts .\src
    - run: sudo apt-get install build-essential libbluetooth-dev
      env: 
        ENV_SETTINGS: ${{ secrets.ENV_SETTINGS }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-linux-x64
          path: out/make/zip/linux/x64/*.zip
     
  build_macos:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout env
      uses: actions/checkout@v2.3.4
      with:
        repository: soundshed/soundshed-private
        path: app-private
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - run:
        cp app-private\env.ts .\src
      env: 
        ENV_SETTINGS: ${{ secrets.ENV_SETTINGS }}
        
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
      
    - name: upload
      uses: actions/upload-artifact@v2
      with: 
          name: soundshed-macos-x64
          path: out/make/zip/darwin/x64/*.zip
      

