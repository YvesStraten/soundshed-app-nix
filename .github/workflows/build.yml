# build and make
name: app build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_windows:
    if: false # disable build
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
   
    - run: SET %WIN_CODE_SIGNING_P12_ENCODED% > win_cert_encoded.txt
      env: 
        WIN_CODE_SIGNING_P12_ENCODED: ${{ secrets.WIN_CODE_SIGN_ENCODED_P12 }}

    - run: certutil -f -decode win_cert_encoded.txt win_cert.p12 
    - run: SET WIN_CODE_SIGNING_P12 = win_cert.p12
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
      env: 
        WIN_CODE_SIGN_PWD: ${{ secrets.WIN_CODE_SIGNING_PWD }} 
   
  build_linux_ubuntu:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: sudo apt-get install build-essential libbluetooth-dev
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
     
  build_macos:

    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run make
      

